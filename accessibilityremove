Add-Type -TypeDefinition @"
using System;
using System.Runtime.InteropServices;
using System.Threading;
public class Keyboard {
    [DllImport("user32.dll", SetLastError = true)]
    public static extern void keybd_event(byte bVk, byte bScan, uint dwFlags, IntPtr dwExtraInfo);
    [DllImport("user32.dll")]
    public static extern short GetAsyncKeyState(int vKey);
}
"@ -Language CSharp

Write-Host "Press [SPACEBAR] to type `";0600755597?`" globally. Press [ESC] to exit."

# Map characters to correct virtual keycodes
$charMap = @{
    ';' = 0xBA  # Virtual key for semicolon (;)
    '0' = 0x30  # Number 0
    '6' = 0x36  # Number 6
    '7' = 0x37  # Number 7
    '5' = 0x35  # Number 5
    '9' = 0x39  # Number 9
    '?' = 0xBF  # Virtual key for slash (/) requires SHIFT
}

while ($true) {
    if ([Keyboard]::GetAsyncKeyState(0x20) -ne 0) {  # SPACEBAR (0x20)
        Start-Sleep -Milliseconds 50  # Small delay to prevent spam

        # Type ";0600755597?" correctly
        foreach ($char in ";0600755597?".ToCharArray()) {
            $vk = $charMap[$char]

            if ($char -eq '?') {
                [Keyboard]::keybd_event(0x10, 0, 0, [IntPtr]::Zero)  # Press SHIFT
            }

            [Keyboard]::keybd_event($vk, 0, 0, [IntPtr]::Zero)   # Press key
            [Keyboard]::keybd_event($vk, 0, 2, [IntPtr]::Zero)   # Release key

            if ($char -eq '?') {
                [Keyboard]::keybd_event(0x10, 0, 2, [IntPtr]::Zero)  # Release SHIFT
            }

            Start-Sleep -Milliseconds 50  # Small delay between key presses
        }
    }

    if ([Keyboard]::GetAsyncKeyState(0x1B) -ne 0) {  # ESC (0x1B)
        Write-Host "Exiting..."
        break
    }

    Start-Sleep -Milliseconds 50
}
